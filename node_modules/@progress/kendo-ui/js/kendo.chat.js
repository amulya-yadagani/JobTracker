module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1023);


/***/ }),

/***/ 3:
/***/ (function(module, exports) {

	module.exports = function() { throw new Error("define cannot be used indirect"); };


/***/ }),

/***/ 1023:
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define){
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(1024), __webpack_require__(1025) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	})(function(){

	var __meta__ = { // jshint ignore:line
	    id: "chat",
	    name: "Chat",
	    category: "web",
	    description: "The Chat component.",
	    depends: [ "core", "draganddrop" ]
	};

	(function($, undefined) {

	    var kendo = window.kendo;
	    var Widget = kendo.ui.Widget;
	    var extend = $.extend;
	    var DOT = ".";

	    var chatStyles = {
	        wrapper: "k-widget k-chat",
	        canvas: "k-chat-canvas",
	        viewWrapper: "k-message-list",
	        messageBoxWrapper: "k-message-box"
	    };

	    var Chat = Widget.extend({
	        init: function(element, options, events) {
	            Widget.fn.init.call(this, element, options);

	            if (events) {
	                this._events = events;
	            }

	            this._user();

	            this._wrapper();

	            this._view();

	            this._messageBox();

	            kendo.notify(this);
	        },

	        events: [
	            "typingStart",
	            "typingEnd",
	            "post",
	            "sendMessage",
	            "actionClick"
	        ],

	        options: {
	            user: {
	                name: "User",
	                iconUrl: ""
	            },
	            name: "Chat",
	            messages: {
	                placeholder: "Type a message..."
	            }
	        },

	        destroy: function() {
	            if (this.view) {
	                this.view.unbind();
	                this.view.destroy();
	                this.view = null;
	            }

	            if (this.messageBox) {
	                this.messageBox.unbind();
	                this.messageBox.destroy();
	                this.messageBox = null;
	            }

	            Widget.fn.destroy.call(this);
	        },

	        _user: function() {
	            this.options.user.id = kendo.guid();
	        },

	        getUser: function() {
	            return extend(true, {}, this.options.user);
	        },

	        _wrapper: function() {
	            var chatStyles = Chat.styles;
	            var options = this.options;
	            var height = options.height;
	            var width = options.width;

	            this.wrapper = this.element
	                .addClass(chatStyles.wrapper)
	                .append(
	                    "<div class='" + chatStyles.viewWrapper + "'></div>" +
	                    "<div class='" + chatStyles.messageBoxWrapper + "'></div>"
	                );

	            if (height) {
	                this.wrapper.height(height);
	            }

	            if (width) {
	                this.wrapper.css("max-width", width);
	            }
	        },

	        _view: function() {
	            var that = this;
	            var chatStyles = Chat.styles;
	            var options = extend(true, {}, this.options);
	            var element = this.wrapper.find(DOT + chatStyles.viewWrapper + "");

	            this.view = new kendo.chat.ChatView(element, options);

	            this.view
	                .bind("actionClick", function(args) {
	                    that.trigger("actionClick", args);

	                    that.postMessage(args.text);
	                });
	        },

	        _messageBox: function() {
	            var that = this;
	            var chatStyles = Chat.styles;
	            var options = extend(true, {}, this.options);
	            var element = this.wrapper.find(DOT + chatStyles.messageBoxWrapper + "");

	            this.messageBox = new kendo.chat.ChatMessageBox(element, options);

	            this.messageBox
	                .bind("typingStart", function(args) {
	                    that.trigger("typingStart", args);
	                })
	                .bind("typingEnd", function(args) {
	                    that.trigger("typingEnd", args);
	                })
	                .bind("sendMessage", function(args) {
	                    that.trigger("sendMessage", args);

	                    that.postMessage(args.text);
	                });
	        },

	        postMessage: function(message) {
	            var postArgs = extend(true, {}, { text: message, type: "message", timestamp: new Date(), from: this.getUser() });

	            this.trigger("post", postArgs);

	            this.renderMessage(postArgs, postArgs.from);
	        },

	        // TEST calling View renderMessage
	        renderMessage: function(message, sender) {
	            this.view.renderMessage(message, sender);
	        },

	        // TEST calling View renderSuggestedActions
	        renderSuggestedActions: function(suggestedActions) {
	            this.view.renderSuggestedActions(suggestedActions);
	        },

	        // TEST calling View renderCard
	        renderAttachments: function(options, sender) {
	            this.view.renderAttachments(options, sender);
	        }
	    });

	    kendo.ui.plugin(Chat);

	    extend(true, Chat, { styles: chatStyles });

	})(window.kendo.jQuery);

	return window.kendo;

	}, __webpack_require__(3));


/***/ }),

/***/ 1024:
/***/ (function(module, exports) {

	module.exports = require("./chat/view");

/***/ }),

/***/ 1025:
/***/ (function(module, exports) {

	module.exports = require("./chat/messageBox");

/***/ })

/******/ });