import { Directive, HostListener, ElementRef, Renderer2, Optional, HostBinding, Input } from "@angular/core";
import { DragResizeService } from './../drag-resize.service';
import { Button } from '@progress/kendo-angular-buttons';
import { LocalizationService } from '@progress/kendo-angular-l10n';
export class WindowMinimizeActionDirective extends Button {
    constructor(el, renderer, _service, localization) {
        super(el, renderer, null, localization);
        this.window = _service;
        this.look = 'bare';
        this.icon = 'window-minimize';
    }
    onClick() {
        if (!this.isDisabled) {
            this.window.minimizeAction();
        }
    }
    get visible() {
        return this.window.options.state === 'default' ? 'inline-flex' : 'none';
    }
}
WindowMinimizeActionDirective.decorators = [
    { type: Directive, args: [{
                exportAs: 'kendoWindowMinimizeAction',
                selector: 'button[kendoWindowMinimizeAction]' // tslint:disable-line
            },] },
];
/** @nocollapse */
WindowMinimizeActionDirective.ctorParameters = () => [
    { type: ElementRef, },
    { type: Renderer2, },
    { type: DragResizeService, decorators: [{ type: Optional },] },
    { type: LocalizationService, },
];
WindowMinimizeActionDirective.propDecorators = {
    'window': [{ type: Input },],
    'onClick': [{ type: HostListener, args: ['click',] },],
    'visible': [{ type: HostBinding, args: ['style.display',] },],
};
